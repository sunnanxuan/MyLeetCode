class Solution:
    def minMalwareSpread(self, graph: List[List[int]], initial: List[int]) -> int:
        def malware(m):
            spread ={}
            for i in initial:
                if i!=m and i not in spread :
                    visited=set()
                    q=[i]
                    visited.add(i)
                    while q:
                        new=[]
                        for j in q:
                            for k in dic[j]:
                                if k!=m and k not in visited:
                                    visited.add(k)
                                    new.append(k)
                        q=new
                    for c in visited:
                        if c in initial:spread[c]=visited
            cur=set()
            for j in initial:
                if j!=m:cur|=spread[j]
            return len(cur)

        dic=collections.defaultdict(list)
        n=len(graph)
        for i,g in enumerate(graph):
            for j in range(n):
                if g[j]==1 and j!=i:
                    dic[i].append(j)
        count={}
        for i in initial:
            count[i]=malware(i)
        arr=list(count.items())
        arr.sort(key=lambda x:(x[1],x[0]))
        return arr[0][0]